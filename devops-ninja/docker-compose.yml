# Stack Compose: API Node, PostgreSQL et Swagger UI
services:
  api:
    # Image de l'API (build local puis taggée dm-api:v1)
    build: ./api
    image: dm-api:v1
    environment:
      # Port interne exposé par l'API (correspond à Dockerfile EXPOSE)
      - PORT=${PORT}
      # Paramètres de connexion Postgres utilisés par le Pool dans server.js
      - PGHOST=${PGHOST}        # Nom du service (DNS interne Docker), pas localhost
      - PGPORT=${PGPORT}            # Port interne du conteneur Postgres (pas 5433)
      - PGUSER=${PGUSER}             # Doit correspondre à POSTGRES_USER ci-dessous
      - PGPASSWORD=${PGPASSWORD}         # Doit correspondre à POSTGRES_PASSWORD ci-dessous
      - PGDATABASE=${PGDATABASE} # Doit correspondre à POSTGRES_DB ci-dessous
    ports:
      - "5001:5000"            # host:container → http://localhost:5001
    depends_on:
      - postgres               # Démarre la DB avant l'API (ordre de démarrage)
    volumes:
      - ./openapi:/app/openapi:ro

  postgres:
    image: postgres:16-alpine  # Image légère adaptée au dev/CI
    environment:
      - POSTGRES_USER=app      # Utilisateur créé à l'initialisation
      - POSTGRES_PASSWORD=app  # À changer en prod (variable secrète)
      - POSTGRES_DB=dernier_metro # Base par défaut créée au premier démarrage
    ports:
      - "5433:5432"            # hôte 5433 → conteneur 5432 (évite conflit local)
    volumes:
      - ./db:/docker-entrypoint-initdb.d:ro # Exécute schema.sql + seed.sql au 1er run
      - pgdata:/var/lib/postgresql/data     # Volume nommé pour persister les données

  swagger:
    image: swaggerapi/swagger-ui:latest # UI de doc interactive pour OpenAPI
    environment:
      - SWAGGER_JSON=/openapi/openapi.yaml # Chemin du fichier dans le conteneur
    volumes:
      - ./openapi:/openapi:ro # Monte la spec locale dans le conteneur
    ports:
      - "8080:8080"            # Ouvre Swagger UI sur http://localhost:8080
    depends_on:
      - api
      - postgres

volumes:
  pgdata:
    # Volume nommé pour les données Postgres (créé automatiquement)
